name: Publish to GitHub Container Registry and Docker Hub

on:
  push:
    tags:
      - '*.*.*'
env:
  REGISTRY_GHCR: ghcr.io
  REGISTRY_DOCKERHUB: docker.io

jobs:
  build-and-push:
    name: Deploy to Docker Hub & GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with: 
          install: true
      - name: Convert repository name to lowercase
        id: vars
        run: echo "REPO_NAME_LOWER=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v1
        with:
          images: |
            ${{ env.REGISTRY_GHCR }}/${{ env.REPO_NAME_LOWER }}
            ${{ env.REGISTRY_DOCKERHUB }}/${{ env.REPO_NAME_LOWER }}
      - name: Build Docker image without push
        id: build-image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          tags: |
            ${{ github.ref_name }}
            latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Log into GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker image to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY_GHCR }}/${{ env.REPO_NAME_LOWER }}:${{ github.ref_name }}
            ${{ env.REGISTRY_GHCR }}/${{ env.REPO_NAME_LOWER }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_DOCKERHUB }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Docker image to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY_DOCKERHUB }}/${{ env.REPO_NAME_LOWER }}:${{ github.ref_name }}
            ${{ env.REGISTRY_DOCKERHUB }}/${{ env.REPO_NAME_LOWER }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  upload-release:
    name: Upload as GitHub release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Create zip file
        run: |
          ZIP_NAME="${GITHUB_REPOSITORY##*/}-${GITHUB_REF#refs/tags/}.zip"
          git archive -o "$ZIP_NAME" HEAD
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
      - name: Extract changelog
        id: changelog
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          NOTES=$(awk "/## $VERSION/{flag=1; next}/^## /{flag=0}flag" CHANGELOG.md | sed '/^\s*$/d')
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Create release & upload ZIP
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ZIP_NAME }}
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}